name: PowerShell Module CI - Azure.Arc.Jumpstart.LocalBox

on:
  push:
    branches:
      - main
    paths:
      - powershell/modules/Azure.Arc.Jumpstart.LocalBox/.github/workflows/ps-module_azure.arc.jumpstart.localbox.yaml/source
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  buildFolderName: ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/output
  buildArtifactName: output
  testResultFolderName: testResults
  defaultBranch: main

jobs:
  build:
    name: Build & Package Module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
         fetch-depth: 0

      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool --version 5.*

      - name: Calculate ModuleVersion (GitVersion)
        id: gitversion
        run: |
          export PATH="$PATH:/home/runner/.dotnet/tools"
          gitversion | tee gitversion.json
          VERSION=$(jq -r .FullSemVer gitversion.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build & Package Module
        run: pwsh ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -ResolveDependency -tasks pack
        env:
          ModuleVersion: ${{ env.VERSION }}

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}/

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}

      - name: Run Tests
        run: pwsh ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -tasks test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageLinux
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/

  test_windows_core:
    name: Test (Windows PowerShell 7)
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}

      - name: Run Tests
        shell: pwsh
        run: ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -tasks test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageWinPS7
          path: ${{ env.buildFolderName }}\${{ env.testResultFolderName }}\

  test_macos:
    name: Test (macOS)
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}

      - name: Run Tests
        run: pwsh ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -tasks test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageMacOS
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/

  code_coverage:
    name: Publish Code Coverage
    runs-on: ubuntu-latest
    needs: [test_linux, test_windows_core, test_macos]
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: CodeCoverageLinux
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}

      - name: Download Windows PS7 Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: CodeCoverageWinPS7
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}

      - name: Download Windows PS51 Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: CodeCoverageWinPS51
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}

      - name: Download macOS Test Artifact
        uses: actions/download-artifact@v4
        with:
          name: CodeCoverageMacOS
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}

      # Add steps here to merge and publish code coverage if needed

  deploy:
    name: Deploy Module
    runs-on: ubuntu-latest
    needs: [code_coverage]
    if: |
      github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}

      - name: Publish Release
        run: pwsh ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -tasks publish
        env:
          GitHubToken: ${{ secrets.GITHUB_TOKEN }}
          GalleryApiToken: ${{ secrets.POSH_GALLERY_API }}
          ReleaseBranch: ${{ env.defaultBranch }}
          MainGitBranch: ${{ env.defaultBranch }}

    #   - name: Send Changelog PR
    #     run: pwsh ./powershell/modules/Azure.Arc.Jumpstart.LocalBox/build.ps1 -tasks Create_ChangeLog_GitHub_PR
    #     env:
    #       GitHubToken: ${{ secrets.GITHUB_TOKEN }}
    #       ReleaseBranch: ${{ env.defaultBranch }}
    #       MainGitBranch: ${{ env.defaultBranch }}
