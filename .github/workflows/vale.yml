name: Vale PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  vale:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vale
        run: |
          # Determine architecture and download the appropriate Vale binary
          ARCH=$(uname -m)
          if [ "$ARCH" == "x86_64" ]; then
            curl -fsSL "https://github.com/errata-ai/vale/releases/download/v3.11.2/vale_3.11.2_Linux_64-bit.tar.gz" | tar -xz -C /home/runner
          elif [ "$ARCH" == "aarch64" ]; then
            curl -fsSL "https://github.com/errata-ai/vale/releases/download/v3.11.2/vale_3.11.2_Linux_arm64.tar.gz" | tar -xz -C /home/runner
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          sudo mv /home/runner/vale /usr/local/bin/vale

      - name: Create styles directory
        run: |
          mkdir -p .github/vale/styles

      - name: Install Microsoft Style for Vale
        run: |
          git clone https://github.com/errata-ai/Microsoft.git .github/vale/styles/Microsoft

      - name: Run Vale
        uses: errata-ai/vale-action@v2.1.1
        with:
          version: '3.11.2'
          files: '.'
          fail_on_error: false
        continue-on-error: true

      - name: Format Vale output for PR comment
        run: |
          echo '### :mag_right: Vale Linting Report' > vale-comment.txt
          echo '' >> vale-comment.txt
          if [ -s vale-output.txt ]; then
            cat vale-output.txt >> vale-comment.txt
          else
            echo "âœ… No linting issues found." >> vale-comment.txt
          fi

      - name: Generate GitHub App token
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.JUMPSTART_ACCESS_APP_ID }}
          private_key: ${{ secrets.JUMPSTART_ACCESS_APP_PRIVATE_KEY }}

      - name: Comment on PR with Vale results
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: vale-comment.txt
